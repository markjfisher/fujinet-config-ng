; FONT: blood_rain
    .byte $00, $00, $00, $00, $00, $00, $00, $00 ; space
    .byte $18, $18, $18, $08, $18, $18, $10, $10 ; !
    .byte $66, $66, $CC, $84, $04, $00, $00, $00 ; "
    .byte $6C, $FE, $6C, $FE, $6C, $64, $44, $00 ; #
    .byte $7E, $F2, $7C, $1E, $FE, $BA, $90, $10 ; $
    .byte $64, $D8, $7C, $36, $7E, $4C, $48, $00 ; %
    .byte $70, $E4, $7E, $C6, $7E, $6C, $24, $20 ; &
    .byte $18, $18, $30, $10, $10, $00, $00, $00 ; '
    .byte $1C, $34, $30, $30, $3C, $28, $28, $20 ; (
    .byte $38, $2C, $0C, $0C, $38, $38, $28, $08 ; )
    .byte $6C, $38, $EE, $3A, $6C, $64, $40, $00 ; *
    .byte $18, $18, $7E, $38, $18, $10, $10, $00 ; +
    .byte $00, $00, $00, $18, $18, $30, $10, $00 ; comma
    .byte $00, $00, $00, $7E, $5C, $08, $00, $00 ; -
    .byte $00, $00, $00, $00, $18, $18, $08, $08 ; .
    .byte $06, $0E, $1A, $38, $60, $20, $20, $00 ; /
    .byte $7C, $C6, $D6, $C6, $7E, $34, $24, $04 ; 0
    .byte $18, $38, $38, $18, $7E, $3C, $28, $20 ; 1
    .byte $FC, $0E, $7C, $C8, $FE, $6E, $44, $00 ; 2
    .byte $7E, $53, $4E, $03, $7F, $3E, $12, $00 ; 3
    .byte $30, $60, $CC, $FE, $6C, $24, $24, $00 ; 4
    .byte $FE, $C0, $FC, $06, $FE, $7E, $2A, $02 ; 5
    .byte $7C, $C0, $FC, $C6, $FC, $B4, $24, $20 ; 6
    .byte $FE, $C6, $4E, $1E, $34, $14, $10, $00 ; 7
    .byte $7C, $C6, $7C, $C6, $7E, $74, $24, $00 ; 8
    .byte $7C, $C6, $7E, $06, $7E, $7A, $52, $00 ; 9
    .byte $00, $18, $18, $10, $08, $18, $08, $08 ; :
    .byte $00, $18, $10, $08, $10, $18, $38, $08 ; ;
    .byte $06, $1C, $70, $3C, $26, $04, $00, $00 ; <
    .byte $00, $00, $FE, $00, $FE, $00, $00, $00 ; =
    .byte $60, $38, $0E, $3C, $68, $68, $40, $00 ; >
    .byte $00, $FC, $06, $3E, $10, $38, $38, $20 ; ?
    .byte $7C, $D6, $BE, $76, $6E, $7E, $54, $14 ; @
    .byte $38, $38, $6C, $7C, $DE, $4A, $40, $40 ; A
    .byte $FC, $C6, $FC, $C6, $FE, $E6, $44, $40 ; B
    .byte $7C, $F6, $D0, $C0, $C6, $7C, $54, $04 ; C
    .byte $FC, $D6, $C6, $C6, $FC, $74, $54, $00 ; D
    .byte $7E, $C4, $F0, $C0, $7E, $4C, $04, $00 ; E
    .byte $FE, $C4, $F0, $D0, $D0, $C0, $40, $00 ; F
    .byte $7E, $C0, $DE, $C6, $FE, $B6, $94, $04 ; G
    .byte $C6, $C6, $FE, $CE, $C6, $C6, $84, $00 ; H
    .byte $7E, $1A, $18, $18, $18, $7E, $3A, $08 ; I
    .byte $06, $06, $06, $06, $06, $FC, $EC, $48 ; J
    .byte $C6, $DC, $F4, $E0, $F8, $EE, $A2, $00 ; K
    .byte $C0, $C0, $C0, $C0, $FE, $76, $22, $02 ; L
    .byte $C6, $EE, $FE, $D6, $D6, $14, $04, $00 ; M
    .byte $C6, $E6, $F6, $DE, $CE, $CA, $82, $02 ; N
    .byte $7C, $C6, $C6, $C6, $FC, $BC, $88, $00 ; O
    .byte $FC, $C6, $FC, $CC, $C8, $40, $40, $00 ; P
    .byte $7C, $C6, $D6, $DC, $F6, $66, $26, $02 ; Q
    .byte $FC, $C6, $FC, $D8, $CC, $8C, $84, $04 ; R
    .byte $7E, $E0, $7C, $26, $FC, $EC, $44, $00 ; S
    .byte $7E, $7A, $58, $18, $18, $08, $08, $08 ; T
    .byte $C6, $C6, $C6, $C6, $FE, $B4, $A0, $80 ; U
    .byte $C6, $C6, $EC, $BC, $BC, $14, $10, $00 ; V
    .byte $D6, $D6, $FE, $FE, $D6, $44, $44, $00 ; W
    .byte $C6, $EE, $3A, $7C, $DE, $D6, $82, $02 ; X
    .byte $C6, $6E, $3A, $38, $38, $10, $10, $10 ; Y
    .byte $FE, $9C, $38, $70, $FE, $76, $24, $20 ; Z
    .byte $7E, $60, $60, $60, $7E, $3C, $28, $20 ; [
    .byte $60, $70, $78, $5C, $16, $12, $10, $00 ; \
    .byte $7E, $06, $06, $06, $7E, $6A, $4A, $08 ; ]
    .byte $18, $3C, $6E, $2A, $22, $22, $20, $00 ; ^
    .byte $00, $00, $00, $00, $FF, $5A, $0A, $00 ; _
    .byte $00, $70, $8E, $FE, $FE, $FE, $FE, $00 ; dir
    .byte $03, $07, $07, $07, $07, $07, $07, $03 ; open left
    .byte $C0, $E0, $E0, $E0, $E0, $E0, $E0, $C0 ; open right
    .byte $18, $18, $18, $F8, $F8, $00, $00, $00 ; LR square
    .byte $C3, $E7, $E7, $E7, $E7, $E7, $E7, $C3 ; close-open
    .byte $00, $00, $00, $F8, $F8, $18, $18, $18 ; UR square
    .byte $00, $00, $00, $00, $01, $07, $0F, $0F ; UL corner
    .byte $00, $00, $00, $00, $80, $E0, $F0, $F0 ; UR corner
    .byte $0F, $0F, $07, $01, $00, $00, $00, $00 ; LL corner
    .byte $F0, $F0, $E0, $80, $00, $00, $00, $00 ; LR corner
    .byte $00, $00, $00, $00, $1F, $7F, $FF, $FF ; UL long
    .byte $00, $00, $00, $00, $F8, $FE, $FF, $FF ; UR long
    .byte $FF, $FF, $7F, $1F, $00, $00, $00, $00 ; LL long
    .byte $00, $00, $00, $03, $33, $33, $33, $33 ; wifi 2
    .byte $00, $30, $30, $30, $30, $30, $30, $30 ; wifi 3
    .byte $FF, $FF, $FE, $F8, $00, $00, $00, $00 ; LR long
    .byte $3F, $7B, $F9, $C0, $C0, $F9, $7B, $3F ; select arrow
    .byte $00, $00, $00, $1F, $1F, $18, $18, $18 ; UL square
    .byte $00, $00, $00, $FF, $FF, $00, $00, $00 ; horiz
    .byte $18, $18, $18, $FF, $FF, $18, $18, $18 ; h/v +
    .byte $83, $C7, $E7, $E7, $E7, $E7, $C7, $83 ; close-open ang
    .byte $00, $00, $00, $00, $FF, $FF, $FF, $FF ; half horiz
    .byte $00, $00, $00, $00, $00, $00, $03, $33 ; wifi 1
    .byte $F8, $F8, $FC, $FF, $FF, $FC, $F8, $F8 ; L sep
    .byte $1F, $1F, $3F, $FF, $FF, $3F, $1F, $1F ; R sep
    .byte $F0, $F0, $F0, $F0, $F0, $F0, $F0, $F0 ; half vert
    .byte $18, $18, $18, $1F, $1F, $00, $00, $00 ; LR corner
    .byte $78, $60, $78, $60, $7E, $18, $1E, $00 ; Esc
    .byte $00, $18, $3C, $7E, $18, $18, $18, $00 ; Up
    .byte $00, $18, $18, $18, $7E, $3C, $18, $00 ; Down
    .byte $00, $18, $30, $7E, $30, $18, $00, $00 ; Left
    .byte $00, $18, $0C, $7E, $0C, $18, $00, $00 ; Right
    .byte $3E, $62, $FA, $60, $FE, $64, $64, $20 ; ball
    .byte $7C, $06, $7E, $C6, $7E, $56, $04, $04 ; a
    .byte $C0, $FC, $C6, $C6, $FC, $E4, $44, $40 ; b
    .byte $7E, $C0, $C0, $C0, $FE, $66, $44, $40 ; c
    .byte $06, $7E, $C6, $C6, $7E, $64, $24, $04 ; d
    .byte $7C, $C6, $FE, $C0, $FE, $CC, $44, $00 ; e
    .byte $3E, $62, $FA, $68, $68, $60, $20, $20 ; f
    .byte $7E, $C6, $7E, $06, $7E, $34, $24, $20 ; g
    .byte $C0, $FC, $E6, $E6, $C6, $C2, $C2, $40 ; h
    .byte $18, $00, $18, $18, $18, $08, $08, $00 ; i
    .byte $06, $00, $06, $06, $FC, $74, $24, $04 ; j
    .byte $C0, $CC, $F8, $CC, $C6, $46, $42, $00 ; k
    .byte $38, $18, $18, $18, $18, $10, $10, $10 ; l
    .byte $EC, $FE, $D6, $D6, $D6, $52, $42, $02 ; m
    .byte $FC, $C6, $C6, $C6, $C6, $46, $44, $00 ; n
    .byte $7C, $C6, $C6, $C6, $7C, $78, $28, $20 ; o
    .byte $FC, $C6, $C6, $FC, $D8, $C8, $40, $40 ; p
    .byte $7E, $C6, $C6, $7E, $46, $06, $04, $04 ; q
    .byte $FC, $DE, $D2, $D2, $C0, $40, $40, $00 ; r
    .byte $7E, $C0, $7C, $06, $FE, $DC, $54, $10 ; s
    .byte $30, $FC, $30, $30, $3E, $2C, $24, $04 ; t
    .byte $C6, $C6, $C6, $C6, $7E, $3C, $28, $28 ; u
    .byte $C6, $C6, $6E, $7A, $5A, $12, $10, $10 ; v
    .byte $C6, $D6, $D6, $FE, $6C, $44, $44, $00 ; w
    .byte $C6, $6C, $38, $7C, $DE, $4A, $02, $00 ; x
    .byte $C6, $6E, $7A, $1A, $F0, $C0, $40, $40 ; y
    .byte $FE, $1C, $38, $70, $FE, $5E, $4A, $40 ; z
    .byte $00, $0E, $18, $18, $70, $18, $18, $0E ; {
    .byte $18, $18, $18, $18, $18, $18, $18, $18 ; |
    .byte $00, $70, $18, $18, $0E, $18, $18, $70 ; }
    .byte $08, $18, $38, $78, $38, $18, $08, $00 ; L vert triangle
    .byte $10, $18, $1C, $1E, $1C, $18, $10, $00 ; R vert triangle
