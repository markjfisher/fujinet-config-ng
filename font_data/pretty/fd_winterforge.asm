; FONT: winterforge
    .byte $00, $00, $00, $00, $00, $00, $00, $00 ; space
    .byte $00, $10, $30, $10, $30, $00, $30, $00 ; !
    .byte $00, $36, $6C, $00, $00, $00, $00, $00 ; "
    .byte $00, $14, $3E, $28, $7C, $28, $00, $00 ; #
    .byte $00, $08, $FE, $54, $F0, $1C, $FE, $20 ; $
    .byte $00, $64, $6C, $18, $30, $2C, $4C, $00 ; %
    .byte $00, $78, $20, $76, $4C, $C6, $FE, $00 ; &
    .byte $00, $18, $30, $00, $00, $00, $00, $00 ; '
    .byte $00, $7E, $30, $60, $60, $30, $1E, $00 ; (
    .byte $00, $7E, $0C, $06, $06, $0C, $78, $00 ; )
    .byte $00, $10, $5C, $78, $54, $10, $00, $00 ; *
    .byte $00, $08, $18, $1E, $78, $18, $10, $00 ; +
    .byte $00, $00, $00, $00, $00, $00, $18, $30 ; comma
    .byte $00, $00, $00, $00, $7E, $04, $00, $00 ; -
    .byte $00, $00, $00, $00, $00, $08, $18, $00 ; .
    .byte $00, $06, $08, $18, $30, $60, $40, $00 ; /
    .byte $00, $FE, $6C, $C4, $86, $4C, $78, $00 ; 0
    .byte $00, $38, $10, $10, $18, $18, $3C, $00 ; 1
    .byte $00, $FE, $4C, $1C, $60, $C0, $FC, $02 ; 2
    .byte $00, $7E, $4C, $08, $1C, $46, $FE, $00 ; 3
    .byte $00, $04, $2C, $6C, $48, $FE, $0C, $08 ; 4
    .byte $00, $7E, $44, $F0, $1C, $06, $7E, $80 ; 5
    .byte $00, $1E, $24, $F0, $4C, $E6, $BE, $00 ; 6
    .byte $00, $FE, $4C, $18, $10, $30, $38, $00 ; 7
    .byte $00, $7E, $24, $38, $6C, $C6, $BE, $00 ; 8
    .byte $00, $FE, $CC, $68, $10, $30, $60, $20 ; 9
    .byte $00, $00, $08, $18, $00, $08, $18, $00 ; :
    .byte $00, $00, $08, $18, $00, $00, $18, $30 ; ;
    .byte $00, $00, $06, $18, $70, $18, $06, $00 ; <
    .byte $00, $00, $00, $7C, $00, $7C, $00, $00 ; =
    .byte $00, $00, $60, $18, $0E, $18, $60, $00 ; >
    .byte $00, $FE, $4C, $08, $18, $00, $38, $00 ; ?
    .byte $7F, $32, $6D, $B7, $B7, $BC, $C2, $7F ; @
    .byte $00, $7C, $28, $6C, $FC, $44, $C6, $00 ; A
    .byte $00, $FE, $44, $F8, $4C, $66, $FE, $00 ; B
    .byte $00, $FE, $64, $80, $C0, $64, $3E, $00 ; C
    .byte $00, $FE, $0C, $64, $42, $66, $FE, $80 ; D
    .byte $00, $FE, $40, $F8, $60, $44, $7E, $00 ; E
    .byte $00, $FE, $40, $F8, $60, $40, $60, $00 ; F
    .byte $00, $FE, $64, $80, $CE, $64, $3E, $00 ; G
    .byte $00, $42, $C6, $66, $7E, $66, $44, $80 ; H
    .byte $00, $7E, $98, $18, $18, $10, $7E, $00 ; I
    .byte $00, $06, $0C, $06, $06, $44, $F8, $00 ; J
    .byte $00, $62, $CC, $58, $78, $6C, $C6, $01 ; K
    .byte $00, $40, $C0, $C0, $C0, $44, $FE, $00 ; L
    .byte $00, $42, $E6, $7E, $6A, $62, $46, $80 ; M
    .byte $00, $CE, $66, $72, $5A, $6E, $66, $02 ; N
    .byte $00, $FE, $64, $C6, $C6, $4C, $7C, $00 ; O
    .byte $00, $FE, $66, $5C, $70, $40, $40, $80 ; P
    .byte $00, $FE, $64, $C6, $C6, $4C, $3A, $6C ; Q
    .byte $00, $FE, $44, $58, $EC, $46, $46, $80 ; R
    .byte $00, $FE, $44, $F0, $0C, $06, $7E, $80 ; S
    .byte $00, $FF, $5A, $18, $18, $10, $10, $20 ; T
    .byte $00, $E6, $66, $62, $26, $6E, $76, $00 ; U
    .byte $00, $82, $44, $64, $6C, $38, $38, $00 ; V
    .byte $00, $42, $E6, $6A, $7E, $66, $42, $80 ; W
    .byte $00, $42, $C6, $6C, $38, $6C, $46, $80 ; X
    .byte $00, $42, $C6, $6C, $30, $60, $40, $80 ; Y
    .byte $00, $FE, $4C, $18, $20, $60, $FC, $02 ; Z
    .byte $7C, $68, $20, $20, $60, $20, $7C, $00 ; [
    .byte $00, $60, $10, $18, $0C, $06, $02, $00 ; \
    .byte $7C, $2C, $0C, $08, $0C, $08, $7C, $00 ; ]
    .byte $08, $18, $1C, $34, $42, $00, $00, $00 ; ^
    .byte $00, $00, $00, $00, $00, $00, $40, $FF ; _
    .byte $00, $70, $8E, $FE, $FE, $FE, $FE, $00 ; dir
    .byte $03, $07, $07, $07, $07, $07, $07, $03 ; open left
    .byte $C0, $E0, $E0, $E0, $E0, $E0, $E0, $C0 ; open right
    .byte $18, $18, $18, $F8, $F8, $00, $00, $00 ; LR square
    .byte $C3, $E7, $E7, $E7, $E7, $E7, $E7, $C3 ; close-open
    .byte $00, $00, $00, $F8, $F8, $18, $18, $18 ; UR square
    .byte $00, $00, $00, $00, $01, $07, $0F, $0F ; UL corner
    .byte $00, $00, $00, $00, $80, $E0, $F0, $F0 ; UR corner
    .byte $0F, $0F, $07, $01, $00, $00, $00, $00 ; LL corner
    .byte $F0, $F0, $E0, $80, $00, $00, $00, $00 ; LR corner
    .byte $00, $00, $00, $00, $1F, $7F, $FF, $FF ; UL long
    .byte $00, $00, $00, $00, $F8, $FE, $FF, $FF ; UR long
    .byte $FF, $FF, $7F, $1F, $00, $00, $00, $00 ; LL long
    .byte $00, $00, $00, $03, $33, $33, $33, $33 ; wifi 2
    .byte $00, $30, $30, $30, $30, $30, $30, $30 ; wifi 3
    .byte $FF, $FF, $FE, $F8, $00, $00, $00, $00 ; LR long
    .byte $3F, $7B, $F9, $C0, $C0, $F9, $7B, $3F ; select arrow
    .byte $00, $00, $00, $1F, $1F, $18, $18, $18 ; UL square
    .byte $00, $00, $00, $FF, $FF, $00, $00, $00 ; horiz
    .byte $18, $18, $18, $FF, $FF, $18, $18, $18 ; h/v +
    .byte $83, $C7, $E7, $E7, $E7, $E7, $C7, $83 ; close-open ang
    .byte $00, $00, $00, $00, $FF, $FF, $FF, $FF ; half horiz
    .byte $00, $00, $00, $00, $00, $00, $03, $33 ; wifi 1
    .byte $F8, $F8, $FC, $FF, $FF, $FC, $F8, $F8 ; L sep
    .byte $1F, $1F, $3F, $FF, $FF, $3F, $1F, $1F ; R sep
    .byte $F0, $F0, $F0, $F0, $F0, $F0, $F0, $F0 ; half vert
    .byte $18, $18, $18, $1F, $1F, $00, $00, $00 ; LR corner
    .byte $78, $60, $78, $60, $7E, $18, $1E, $00 ; Esc
    .byte $00, $18, $3C, $7E, $18, $18, $18, $00 ; Up
    .byte $00, $18, $18, $18, $7E, $3C, $18, $00 ; Down
    .byte $00, $18, $30, $7E, $30, $18, $00, $00 ; Left
    .byte $00, $18, $0C, $7E, $0C, $18, $00, $00 ; Right
    .byte $00, $7E, $34, $60, $F0, $44, $FE, $00 ; ball
    .byte $00, $00, $7C, $28, $6C, $5C, $C6, $00 ; a
    .byte $00, $00, $FE, $44, $78, $64, $7E, $80 ; b
    .byte $00, $00, $FE, $64, $80, $C4, $7E, $00 ; c
    .byte $00, $00, $FE, $0C, $44, $66, $FE, $00 ; d
    .byte $00, $00, $FE, $44, $F0, $40, $FE, $00 ; e
    .byte $00, $00, $FE, $44, $F0, $40, $60, $00 ; f
    .byte $00, $00, $FE, $60, $84, $CE, $7C, $00 ; g
    .byte $00, $00, $42, $C6, $7E, $66, $42, $80 ; h
    .byte $00, $00, $7E, $98, $18, $10, $7E, $00 ; i
    .byte $00, $00, $0C, $06, $06, $44, $F8, $00 ; j
    .byte $00, $00, $42, $CC, $78, $6C, $46, $80 ; k
    .byte $00, $00, $40, $C0, $C0, $44, $FE, $00 ; l
    .byte $00, $00, $42, $E6, $7E, $6A, $42, $80 ; m
    .byte $00, $00, $DE, $74, $46, $66, $64, $04 ; n
    .byte $00, $00, $FE, $64, $C6, $C6, $7E, $00 ; o
    .byte $00, $00, $FE, $66, $5C, $50, $40, $80 ; p
    .byte $00, $00, $FE, $64, $C6, $4C, $3A, $6C ; q
    .byte $00, $00, $FE, $44, $58, $EC, $46, $80 ; r
    .byte $00, $00, $FE, $44, $F0, $0C, $7E, $80 ; s
    .byte $00, $00, $FE, $58, $18, $18, $10, $20 ; t
    .byte $00, $00, $E6, $64, $26, $6E, $76, $00 ; u
    .byte $00, $00, $C6, $6C, $6C, $38, $38, $00 ; v
    .byte $00, $00, $42, $E6, $6A, $7E, $66, $00 ; w
    .byte $00, $00, $C6, $7C, $38, $6C, $46, $80 ; x
    .byte $00, $00, $42, $C6, $6C, $38, $20, $60 ; y
    .byte $00, $00, $7E, $8C, $38, $60, $FC, $02 ; z
    .byte $00, $0E, $18, $18, $70, $18, $18, $0E ; {
    .byte $18, $18, $18, $18, $18, $18, $18, $18 ; |
    .byte $00, $70, $18, $18, $0E, $18, $18, $70 ; }
    .byte $08, $18, $38, $78, $38, $18, $08, $00 ; L vert triangle
    .byte $10, $18, $1C, $1E, $1C, $18, $10, $00 ; R vert triangle
