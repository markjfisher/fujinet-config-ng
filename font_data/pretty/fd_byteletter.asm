; FONT: byteletter
    .byte $00, $00, $00, $00, $00, $00, $00, $00 ; space
    .byte $08, $18, $38, $18, $00, $18, $10, $00 ; !
    .byte $22, $66, $66, $88, $00, $00, $00, $00 ; "
    .byte $EC, $6C, $FE, $6C, $FE, $6C, $48, $00 ; #
    .byte $04, $1C, $2A, $38, $1E, $76, $3C, $20 ; $
    .byte $00, $62, $AC, $D8, $36, $6A, $8C, $00 ; %
    .byte $18, $2C, $30, $7A, $CC, $CC, $76, $00 ; &
    .byte $08, $18, $18, $20, $00, $00, $00, $00 ; '
    .byte $06, $0C, $18, $18, $18, $18, $0E, $00 ; (
    .byte $60, $30, $18, $18, $18, $18, $70, $00 ; )
    .byte $00, $08, $7E, $38, $FC, $20, $00, $00 ; *
    .byte $00, $08, $18, $1E, $78, $18, $10, $00 ; +
    .byte $00, $00, $00, $00, $08, $18, $18, $20 ; comma
    .byte $00, $00, $00, $2F, $F4, $00, $00, $00 ; -
    .byte $00, $00, $00, $00, $00, $18, $10, $00 ; .
    .byte $06, $0A, $14, $14, $28, $50, $50, $00 ; /
    .byte $1C, $26, $66, $66, $66, $64, $38, $00 ; 0
    .byte $18, $38, $18, $18, $18, $1C, $18, $00 ; 1
    .byte $18, $24, $46, $0C, $18, $30, $7E, $00 ; 2
    .byte $38, $64, $46, $1C, $06, $64, $38, $00 ; 3
    .byte $0C, $1C, $2C, $6C, $7E, $0C, $08, $00 ; 4
    .byte $3E, $20, $5C, $66, $06, $46, $3C, $00 ; 5
    .byte $1C, $32, $60, $6C, $72, $66, $3C, $00 ; 6
    .byte $7E, $C4, $88, $18, $18, $30, $30, $00 ; 7
    .byte $3C, $62, $74, $3C, $2E, $46, $3C, $00 ; 8
    .byte $3C, $66, $4E, $36, $06, $4C, $38, $00 ; 9
    .byte $00, $00, $18, $10, $00, $18, $10, $00 ; :
    .byte $00, $00, $18, $10, $08, $18, $18, $20 ; ;
    .byte $00, $00, $08, $10, $30, $18, $0C, $00 ; <
    .byte $00, $00, $7E, $00, $7E, $00, $00, $00 ; =
    .byte $00, $00, $10, $08, $0C, $18, $30, $00 ; >
    .byte $1C, $26, $0C, $08, $10, $00, $10, $00 ; ?
    .byte $18, $64, $CA, $D6, $D8, $62, $3C, $00 ; @
    .byte $3D, $4E, $9A, $AA, $3A, $4B, $AA, $00 ; A
    .byte $5C, $C6, $54, $5C, $72, $56, $7C, $80 ; B
    .byte $5C, $A2, $D0, $D0, $D0, $52, $3C, $00 ; C
    .byte $B8, $4C, $56, $56, $56, $D6, $7C, $A0 ; D
    .byte $5C, $A2, $D0, $DC, $D0, $52, $3C, $00 ; E
    .byte $1A, $3C, $50, $DC, $50, $58, $50, $A0 ; F
    .byte $5C, $A2, $D0, $D6, $DA, $52, $3C, $00 ; G
    .byte $58, $D0, $5C, $52, $5E, $62, $56, $80 ; H
    .byte $36, $54, $14, $34, $14, $14, $38, $00 ; I
    .byte $3B, $4A, $0A, $1A, $0A, $1A, $4C, $B0 ; J
    .byte $58, $D0, $56, $DA, $54, $E8, $56, $80 ; K
    .byte $58, $D0, $50, $D0, $50, $EC, $52, $80 ; L
    .byte $3B, $55, $55, $DF, $55, $55, $ED, $00 ; M
    .byte $D2, $5A, $D6, $5A, $56, $E2, $46, $80 ; N
    .byte $58, $A4, $D2, $D2, $D2, $54, $38, $00 ; O
    .byte $5C, $D2, $56, $DC, $70, $D0, $50, $80 ; P
    .byte $38, $6C, $AA, $AA, $AA, $4C, $3D, $02 ; Q
    .byte $54, $DA, $52, $D4, $5C, $66, $56, $80 ; R
    .byte $3A, $6C, $A2, $5C, $36, $AA, $7C, $80 ; S
    .byte $7E, $88, $68, $AA, $AA, $44, $38, $00 ; T
    .byte $F5, $6A, $AA, $AA, $AA, $6E, $BB, $00 ; U
    .byte $66, $BA, $22, $3C, $64, $38, $C8, $00 ; V
    .byte $B7, $AA, $AA, $FB, $AA, $EE, $DC, $00 ; W
    .byte $CE, $64, $38, $7C, $38, $4C, $E6, $00 ; X
    .byte $F5, $6A, $AA, $AA, $6E, $BB, $04, $78 ; Y
    .byte $7E, $84, $3C, $10, $78, $62, $FC, $00 ; Z
    .byte $5C, $D2, $50, $D0, $50, $EC, $52, $80 ; [
    .byte $60, $50, $28, $28, $14, $0A, $0A, $00 ; \
    .byte $74, $96, $14, $16, $14, $6E, $94, $02 ; ]
    .byte $10, $10, $28, $6C, $AA, $28, $28, $28 ; ^
    .byte $00, $00, $00, $00, $00, $00, $00, $FF ; _
    .byte $00, $70, $8E, $FE, $FE, $FE, $FE, $00 ; dir
    .byte $03, $07, $07, $07, $07, $07, $07, $03 ; open left
    .byte $C0, $E0, $E0, $E0, $E0, $E0, $E0, $C0 ; open right
    .byte $18, $18, $18, $F8, $F8, $00, $00, $00 ; LR square
    .byte $C3, $E7, $E7, $E7, $E7, $E7, $E7, $C3 ; close-open
    .byte $00, $00, $00, $F8, $F8, $18, $18, $18 ; UR square
    .byte $00, $00, $00, $00, $01, $07, $0F, $0F ; UL corner
    .byte $00, $00, $00, $00, $80, $E0, $F0, $F0 ; UR corner
    .byte $0F, $0F, $07, $01, $00, $00, $00, $00 ; LL corner
    .byte $F0, $F0, $E0, $80, $00, $00, $00, $00 ; LR corner
    .byte $00, $00, $00, $00, $1F, $7F, $FF, $FF ; UL long
    .byte $00, $00, $00, $00, $F8, $FE, $FF, $FF ; UR long
    .byte $FF, $FF, $7F, $1F, $00, $00, $00, $00 ; LL long
    .byte $00, $00, $00, $03, $33, $33, $33, $33 ; wifi 2
    .byte $00, $30, $30, $30, $30, $30, $30, $30 ; wifi 3
    .byte $FF, $FF, $FE, $F8, $00, $00, $00, $00 ; LR long
    .byte $3F, $7B, $F9, $C0, $C0, $F9, $7B, $3F ; select arrow
    .byte $00, $00, $00, $1F, $1F, $18, $18, $18 ; UL square
    .byte $00, $00, $00, $FF, $FF, $00, $00, $00 ; horiz
    .byte $18, $18, $18, $FF, $FF, $18, $18, $18 ; h/v +
    .byte $83, $C7, $E7, $E7, $E7, $E7, $C7, $83 ; close-open ang
    .byte $00, $00, $00, $00, $FF, $FF, $FF, $FF ; half horiz
    .byte $00, $00, $00, $00, $00, $00, $03, $33 ; wifi 1
    .byte $F8, $F8, $FC, $FF, $FF, $FC, $F8, $F8 ; L sep
    .byte $1F, $1F, $3F, $FF, $FF, $3F, $1F, $1F ; R sep
    .byte $F0, $F0, $F0, $F0, $F0, $F0, $F0, $F0 ; half vert
    .byte $18, $18, $18, $1F, $1F, $00, $00, $00 ; LR corner
    .byte $78, $60, $78, $60, $7E, $18, $1E, $00 ; Esc
    .byte $00, $18, $3C, $7E, $18, $18, $18, $00 ; Up
    .byte $00, $18, $18, $18, $7E, $3C, $18, $00 ; Down
    .byte $00, $18, $30, $7E, $30, $18, $00, $00 ; Left
    .byte $00, $18, $0C, $7E, $0C, $18, $00, $00 ; Right
    .byte $0C, $16, $30, $7E, $30, $30, $7A, $9C ; ball
    .byte $00, $38, $4C, $16, $26, $6E, $36, $00 ; a
    .byte $60, $E4, $6E, $76, $66, $74, $58, $00 ; b
    .byte $00, $18, $2C, $60, $60, $34, $18, $00 ; c
    .byte $30, $18, $1C, $2E, $66, $36, $1C, $00 ; d
    .byte $00, $18, $2C, $68, $70, $34, $18, $00 ; e
    .byte $0C, $16, $30, $7C, $30, $30, $38, $60 ; f
    .byte $00, $3A, $6E, $CC, $DC, $2C, $46, $FC ; g
    .byte $A0, $E0, $6C, $76, $66, $66, $E4, $08 ; h
    .byte $18, $10, $38, $58, $18, $10, $18, $20 ; i
    .byte $0C, $08, $1C, $2C, $0C, $0C, $18, $20 ; j
    .byte $30, $60, $EC, $74, $68, $6C, $E6, $00 ; k
    .byte $08, $38, $18, $18, $18, $18, $18, $00 ; l
    .byte $00, $D4, $FE, $D6, $D6, $D6, $D6, $00 ; m
    .byte $00, $66, $EE, $76, $66, $67, $46, $00 ; n
    .byte $00, $1C, $2E, $66, $66, $74, $38, $00 ; o
    .byte $00, $5C, $F6, $66, $EC, $70, $60, $60 ; p
    .byte $00, $3A, $67, $66, $6E, $36, $06, $02 ; q
    .byte $00, $36, $7A, $30, $30, $38, $30, $00 ; r
    .byte $00, $1A, $34, $38, $3C, $CC, $78, $00 ; s
    .byte $08, $18, $7E, $18, $18, $14, $18, $10 ; t
    .byte $00, $5C, $CC, $CC, $CC, $EE, $74, $00 ; u
    .byte $00, $6E, $E6, $66, $6C, $38, $30, $00 ; v
    .byte $00, $42, $D6, $D6, $D6, $EC, $C8, $00 ; w
    .byte $00, $62, $B7, $1C, $3C, $E6, $43, $00 ; x
    .byte $00, $6E, $E6, $2C, $78, $30, $64, $38 ; y
    .byte $00, $3E, $46, $1C, $38, $62, $FC, $00 ; z
    .byte $00, $0E, $18, $18, $70, $18, $18, $0E ; {
    .byte $18, $18, $18, $18, $18, $18, $18, $18 ; |
    .byte $00, $70, $18, $18, $0E, $18, $18, $70 ; }
    .byte $08, $18, $38, $78, $38, $18, $08, $00 ; L vert triangle
    .byte $10, $18, $1C, $1E, $1C, $18, $10, $00 ; R vert triangle
