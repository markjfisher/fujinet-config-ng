; FONT: dunny_on_the_wold
    .byte $00, $00, $00, $00, $00, $00, $00, $00 ; space
    .byte $0C, $0C, $0C, $18, $20, $1C, $18, $00 ; !
    .byte $26, $66, $88, $00, $00, $00, $00, $00 ; "
    .byte $00, $24, $7E, $EC, $6E, $FC, $48, $00 ; #
    .byte $00, $0C, $1E, $31, $1C, $86, $7C, $30 ; $
    .byte $40, $E3, $4E, $1C, $3A, $73, $C6, $00 ; %
    .byte $38, $4C, $64, $78, $DA, $CD, $76, $00 ; &
    .byte $0C, $18, $00, $00, $00, $00, $00, $00 ; '
    .byte $0E, $18, $18, $30, $30, $32, $1C, $00 ; (
    .byte $30, $18, $0C, $0C, $0C, $4C, $38, $00 ; )
    .byte $00, $00, $08, $6A, $3D, $D6, $10, $00 ; *
    .byte $00, $00, $18, $18, $7E, $B0, $30, $00 ; +
    .byte $00, $00, $00, $00, $00, $00, $58, $30 ; comma
    .byte $00, $00, $00, $7E, $00, $00, $00, $00 ; -
    .byte $00, $00, $00, $00, $00, $30, $18, $00 ; .
    .byte $00, $06, $0C, $18, $30, $60, $40, $00 ; /
    .byte $0E, $3B, $33, $63, $66, $E7, $3C, $00 ; 0
    .byte $1E, $3C, $4C, $1C, $18, $99, $7E, $00 ; 1
    .byte $3C, $66, $86, $0C, $38, $63, $FE, $00 ; 2
    .byte $3F, $46, $0E, $1A, $8D, $CC, $78, $00 ; 3
    .byte $0E, $1C, $34, $6C, $FE, $0D, $18, $00 ; 4
    .byte $3E, $32, $70, $7C, $86, $2D, $38, $00 ; 5
    .byte $0C, $32, $60, $6C, $D6, $C7, $7C, $00 ; 6
    .byte $7E, $66, $86, $3C, $0D, $1A, $0C, $00 ; 7
    .byte $1E, $33, $33, $3C, $E6, $67, $3C, $00 ; 8
    .byte $1C, $36, $66, $36, $1E, $9B, $70, $00 ; 9
    .byte $00, $00, $18, $0C, $00, $30, $18, $00 ; :
    .byte $00, $00, $18, $0C, $00, $00, $58, $30 ; ;
    .byte $00, $01, $06, $1C, $70, $9D, $06, $00 ; <
    .byte $00, $00, $00, $7E, $00, $FC, $00, $00 ; =
    .byte $00, $80, $60, $38, $0E, $B9, $60, $00 ; >
    .byte $3E, $67, $43, $1E, $18, $24, $38, $00 ; ?
    .byte $1C, $36, $66, $6A, $7E, $B1, $1E, $00 ; @
    .byte $3E, $14, $36, $7E, $E6, $67, $76, $00 ; A
    .byte $7C, $B6, $36, $3C, $66, $EF, $7C, $00 ; B
    .byte $1D, $33, $30, $60, $61, $E6, $3C, $00 ; C
    .byte $78, $B4, $36, $66, $66, $E7, $BC, $00 ; D
    .byte $72, $BE, $31, $3C, $60, $64, $F8, $00 ; E
    .byte $76, $BA, $31, $3C, $60, $68, $F0, $00 ; F
    .byte $1A, $36, $60, $6E, $C6, $CD, $76, $00 ; G
    .byte $63, $B6, $36, $3E, $6C, $ED, $6E, $00 ; H
    .byte $3B, $2E, $0C, $0C, $19, $5A, $BC, $00 ; I
    .byte $09, $17, $06, $06, $2D, $ED, $38, $00 ; J
    .byte $E6, $6D, $6C, $78, $CC, $CD, $E6, $00 ; K
    .byte $6C, $38, $30, $30, $64, $62, $FE, $00 ; L
    .byte $C6, $6E, $7E, $76, $CC, $CD, $E6, $00 ; M
    .byte $EE, $66, $76, $7E, $DC, $CD, $E6, $00 ; N
    .byte $0E, $3B, $33, $63, $E6, $67, $3C, $00 ; O
    .byte $7C, $B6, $36, $3C, $60, $68, $F0, $00 ; P
    .byte $1C, $36, $66, $C6, $DA, $DD, $76, $00 ; Q
    .byte $7E, $B3, $36, $3C, $66, $77, $EE, $00 ; R
    .byte $3D, $67, $71, $3C, $4F, $E3, $BE, $00 ; S
    .byte $3F, $2D, $4C, $18, $18, $BB, $4C, $00 ; T
    .byte $E6, $6D, $6C, $CC, $D8, $D8, $70, $00 ; U
    .byte $EF, $E6, $6C, $6C, $68, $78, $F0, $00 ; V
    .byte $EF, $63, $D6, $D6, $FE, $FF, $6C, $00 ; W
    .byte $C6, $EE, $BC, $30, $78, $ED, $C6, $00 ; X
    .byte $E6, $6E, $6C, $38, $59, $9A, $1C, $00 ; Y
    .byte $7E, $46, $0C, $18, $31, $E2, $7E, $00 ; Z
    .byte $3C, $32, $30, $60, $60, $64, $78, $00 ; [
    .byte $00, $20, $70, $18, $0C, $06, $06, $00 ; \
    .byte $1E, $26, $06, $0C, $0C, $4C, $3C, $00 ; ]
    .byte $10, $78, $FC, $92, $20, $20, $20, $00 ; ^
    .byte $00, $00, $00, $00, $00, $00, $00, $FF ; _
    .byte $00, $70, $8E, $FE, $FE, $FE, $FE, $00 ; dir
    .byte $03, $07, $07, $07, $07, $07, $07, $03 ; open left
    .byte $C0, $E0, $E0, $E0, $E0, $E0, $E0, $C0 ; open right
    .byte $18, $18, $18, $F8, $F8, $00, $00, $00 ; LR square
    .byte $C3, $E7, $E7, $E7, $E7, $E7, $E7, $C3 ; close-open
    .byte $00, $00, $00, $F8, $F8, $18, $18, $18 ; UR square
    .byte $00, $00, $00, $00, $01, $07, $0F, $0F ; UL corner
    .byte $00, $00, $00, $00, $80, $E0, $F0, $F0 ; UR corner
    .byte $0F, $0F, $07, $01, $00, $00, $00, $00 ; LL corner
    .byte $F0, $F0, $E0, $80, $00, $00, $00, $00 ; LR corner
    .byte $00, $00, $00, $00, $1F, $7F, $FF, $FF ; UL long
    .byte $00, $00, $00, $00, $F8, $FE, $FF, $FF ; UR long
    .byte $FF, $FF, $7F, $1F, $00, $00, $00, $00 ; LL long
    .byte $00, $00, $00, $03, $33, $33, $33, $33 ; wifi 2
    .byte $00, $30, $30, $30, $30, $30, $30, $30 ; wifi 3
    .byte $FF, $FF, $FE, $F8, $00, $00, $00, $00 ; LR long
    .byte $3F, $7B, $F9, $C0, $C0, $F9, $7B, $3F ; select arrow
    .byte $00, $00, $00, $1F, $1F, $18, $18, $18 ; UL square
    .byte $00, $00, $00, $FF, $FF, $00, $00, $00 ; horiz
    .byte $18, $18, $18, $FF, $FF, $18, $18, $18 ; h/v +
    .byte $83, $C7, $E7, $E7, $E7, $E7, $C7, $83 ; close-open ang
    .byte $00, $00, $00, $00, $FF, $FF, $FF, $FF ; half horiz
    .byte $00, $00, $00, $00, $00, $00, $03, $33 ; wifi 1
    .byte $F8, $F8, $FC, $FF, $FF, $FC, $F8, $F8 ; L sep
    .byte $1F, $1F, $3F, $FF, $FF, $3F, $1F, $1F ; R sep
    .byte $F0, $F0, $F0, $F0, $F0, $F0, $F0, $F0 ; half vert
    .byte $18, $18, $18, $1F, $1F, $00, $00, $00 ; LR corner
    .byte $78, $60, $78, $60, $7E, $18, $1E, $00 ; Esc
    .byte $00, $18, $3C, $7E, $18, $18, $18, $00 ; Up
    .byte $00, $18, $18, $18, $7E, $3C, $18, $00 ; Down
    .byte $00, $18, $30, $7E, $30, $18, $00, $00 ; Left
    .byte $00, $18, $0C, $7E, $0C, $18, $00, $00 ; Right
    .byte $0E, $1F, $32, $F8, $70, $66, $FD, $00 ; ball
    .byte $00, $00, $3C, $06, $7C, $CD, $76, $00 ; a
    .byte $3C, $18, $1E, $33, $33, $E7, $7E, $00 ; b
    .byte $00, $00, $1E, $36, $60, $E3, $3E, $00 ; c
    .byte $0F, $06, $3E, $66, $CC, $CD, $76, $00 ; d
    .byte $00, $00, $1C, $36, $7C, $E1, $3E, $00 ; e
    .byte $0E, $19, $18, $7C, $32, $B0, $60, $00 ; f
    .byte $00, $00, $1B, $36, $66, $3D, $8C, $78 ; g
    .byte $78, $30, $3C, $36, $66, $ED, $6E, $00 ; h
    .byte $0C, $00, $1C, $2C, $D9, $1A, $3C, $00 ; i
    .byte $06, $00, $0E, $06, $07, $8D, $EC, $78 ; j
    .byte $70, $B0, $32, $36, $7C, $66, $E3, $00 ; k
    .byte $18, $2C, $0C, $18, $18, $58, $36, $00 ; l
    .byte $00, $00, $EE, $7F, $DB, $D6, $C3, $00 ; m
    .byte $00, $00, $7C, $B6, $36, $67, $EC, $00 ; n
    .byte $00, $00, $1C, $36, $66, $ED, $38, $00 ; o
    .byte $00, $00, $6C, $B6, $36, $7D, $60, $F0 ; p
    .byte $00, $00, $36, $6D, $6D, $BC, $18, $3C ; q
    .byte $00, $00, $6E, $3A, $19, $B0, $78, $00 ; r
    .byte $00, $00, $3C, $66, $39, $8C, $78, $00 ; s
    .byte $00, $30, $78, $30, $E3, $66, $3C, $00 ; t
    .byte $00, $00, $EE, $66, $CC, $CD, $76, $00 ; u
    .byte $00, $00, $EF, $66, $ED, $38, $30, $00 ; v
    .byte $00, $00, $D6, $D6, $7D, $FC, $28, $00 ; w
    .byte $00, $00, $36, $3E, $1B, $FC, $6C, $00 ; x
    .byte $00, $00, $66, $EE, $6D, $38, $B0, $E0 ; y
    .byte $00, $00, $7E, $4C, $38, $73, $FC, $00 ; z
    .byte $00, $0E, $18, $18, $70, $18, $18, $0E ; {
    .byte $18, $18, $18, $18, $18, $18, $18, $18 ; |
    .byte $00, $70, $18, $18, $0E, $18, $18, $70 ; }
    .byte $08, $18, $38, $78, $38, $18, $08, $00 ; L vert triangle
    .byte $10, $18, $1C, $1E, $1C, $18, $10, $00 ; R vert triangle
