FEATURES {
    STARTADDRESS: default = $2000;
}
SYMBOLS {
    __STACKSIZE__:       type = weak,   value = $0100;  # software stack should be pretty minimal, only few params being passed around, nothing recursive
    __STARTADDRESS__:    type = export, value = __MAIN_START__;
}
MEMORY {
    ZP:         file = "", define = yes, start = $0082, size = $007E;
    LOW:        file = %O, define = yes, start = $0600, size = $00F0; # writable memory for eg. self modifying code
    LOWD:       file = %O, define = yes, start = $06f0, size = $0010; # writable memory for storing data, 16 bytes of storage
    PRE:        file = %O, define = yes, start = %S,    size = $0400; # init code that runs once and then overwritten (by PMG etc)
    PMG:        file = %O, define = yes, start = %S,    size = $0400; # This seems HUGE. do we really need all this just for the cursor line?
    SCREEN:     file = %O, define = yes, start = __PMG_START__ + __PMG_SIZE__,       size = $0600; # need $460 for screen mem, dlist < $100, should not cross 4k boundary??
    MAIN:       file = %O, define = yes, start = __SCREEN_START__ + __SCREEN_SIZE__, size = $BC20 - __STACKSIZE__ - __SCREEN_START__ - __SCREEN_SIZE__;
}
FILES {
    %O: format = atari;
}
FORMATS {
    atari: runad = start,
           initad = PRE: pre_init;
}
SEGMENTS {
    ZEROPAGE: load = ZP,         type = zp;
    RESET:    load = LOW,        type = rw,  define = yes;  # reset_handler in RAM as it has modifyable code
    LOWDATA:  load = LOWD,       type = rw,  define = yes;  # for storing values from init routine etc
    PREINIT:  load = PRE,        type = ro,  define = yes;  

    CODE:     load = MAIN,       type = rw,  define = yes;
    RODATA:   load = MAIN,       type = ro,                optional = yes;
    DATA:     load = MAIN,       type = rw,                optional = yes;
    # BSS must be last MAIN block
    BSS:      load = MAIN,       type = bss, define = yes, optional = yes;

    # other segments
    SDATA:    load = SCREEN,     type = rw,  define = yes, optional = yes;
    DLIST:    load = SCREEN,     type = ro,  define = yes, optional = yes;
    PBGBAR:   load = PMG,        type = rw,  define = yes, optional = yes;
}
