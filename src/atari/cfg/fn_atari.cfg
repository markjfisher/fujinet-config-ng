FEATURES {
    STARTADDRESS: default = $2200;
}
SYMBOLS {
    __STACKSIZE__:       type = weak,   value = $0100;  # software stack should be pretty minimal, only few params being passed around, nothing recursive
    __STARTADDRESS__:    type = export, value = %S;
}
MEMORY {
    ZP:         file = "", define = yes, start = $0082, size = $007E;
    LOW:        file = %O, define = yes, start = $0600, size = $0100;
    PRE:        file = %O, define = yes, start = $2000, size = $0100;
    DLISTS:     file = %O, define = yes, start = $2000, size = $0200; # goes over top of PREINIT after it is run
    MAIN:       file = %O, define = yes, start = %S,    size = $BC20 - __STACKSIZE__ - %S;
}
FILES {
    %O: format = atari;
}
FORMATS {
    atari: runad = start,
           initad = PRE: pre_init;
}
SEGMENTS {
    ZEROPAGE: load = ZP,         type = zp;
    RESET:    load = LOW,        type = rw,  define = yes;
    PREINIT:  load = PRE,        type = ro,  define = yes;
    CODE:     load = MAIN,       type = rw,  define = yes;
    RODATA:   load = MAIN,       type = ro,                optional = yes;
    DATA:     load = MAIN,       type = rw,                optional = yes;
    # BSS must be last MAIN block
    BSS:      load = MAIN,       type = bss, define = yes, optional = yes;
    DLIST:    load = DLISTS,     type = ro,  define = yes, optional = yes;
}
