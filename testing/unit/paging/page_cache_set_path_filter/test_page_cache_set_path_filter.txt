marker $$testing page_cache_set_path_filter$$

memory load atari "${BINARY_PATH}"
symbols load "${SYMBOLS_PATH}"

run init until CP = $_main

disable trace_logging

// Test 1: Generate hash for path1 + filter1
run $_main while CP != $t1
registers set cycle_count = 0
run $t1 while CP != $t1_end
assert $hash1 ~ 0x(0D,DD)  $$t1: path1 + filter1 should produce hash 0xDD0D$$

// Test 2: Generate hash for path1 + filter2 (different filter)
run while CP != $t2
registers set cycle_count = 0
run while CP != $t2_end
assert $hash2 ~ 0x(6D,1A)  $$t2: path1 + filter2 should produce hash 0x1A6D$$

// Test 3: Generate hash for path2 + filter2 (different path)  
run while CP != $t3
registers set cycle_count = 0
run while CP != $t3_end
assert $hash3 ~ 0x(72,3A)  $$t3: path2 + filter2 should produce hash 0x3A72$$

// Test 4: Generate hash for path1 + null filter
run while CP != $t4
registers set cycle_count = 0  
run while CP != $t4_end
assert $hash4 ~ 0x(E5,FF)  $$t4: path1 + null filter should produce hash 0xFFE5$$

// Test 5: Repeat test 1 to verify consistency
run while CP != $t5
registers set cycle_count = 0
run while CP != $t5_end
assert $hash5 ~ 0x(0D,DD)  $$t5: repeated input should produce same hash as t1$$

// Test 6: Final verification
run while CP != $t6
registers set cycle_count = 0
run while CP != $t6_end
assert $hash5 ~ 0x(0D,DD)  $$t6: final hash should still be same as t1$$ 