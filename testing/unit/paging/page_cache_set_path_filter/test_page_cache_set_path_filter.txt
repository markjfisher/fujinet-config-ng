marker $$testing page_cache_set_path_filter$$

memory load atari "${BINARY_PATH}"
symbols load "${SYMBOLS_PATH}"

// Test 1: First path with test_filter1 - should store hash $1234
run init until CP = $_main
run $_main while CP != $t1
registers set cycle_count = 0
run $t1 while CP != $t1_end AND cycle_count < 3500

assert $_set_path_flt_params+4 = 0x34  $$t1: hash low byte should be 0x34$$
assert $_set_path_flt_params+5 = 0x12  $$t1: hash high byte should be 0x12$$

// Test 2: First path with test_filter2 - should store hash $5678
run while CP != $t2
registers set cycle_count = 0
run while CP != $t2_end AND cycle_count < 3500

assert $_set_path_flt_params+4 = 0x78  $$t2: hash low byte should be 0x78$$
assert $_set_path_flt_params+5 = 0x56  $$t2: hash high byte should be 0x56$$

// Test 3: Second path with test_filter2 - should store hash $9ABC
run while CP != $t3
registers set cycle_count = 0
run while CP != $t3_end AND cycle_count < 3800

assert $_set_path_flt_params+4 = 0xBC  $$t3: hash low byte should be 0xBC$$
assert $_set_path_flt_params+5 = 0x9A  $$t3: hash high byte should be 0x9A$$

// Test 4: Empty path - should store hash $DEAD
run while CP != $t4
registers set cycle_count = 0
run while CP != $t4_end AND cycle_count < 3000

assert $_set_path_flt_params+4 = 0xAD  $$t4: hash low byte should be 0xAD$$
assert $_set_path_flt_params+5 = 0xDE  $$t4: hash high byte should be 0xDE$$

// Test 5: Path with no filter - should store hash $ABCD
run while CP != $t5
registers set cycle_count = 0
run while CP != $t5_end AND cycle_count < 3100

assert $_set_path_flt_params+4 = 0xCD  $$t5: hash low byte should be 0xCD$$
assert $_set_path_flt_params+5 = 0xAB  $$t5: hash high byte should be 0xAB$$ 