marker $$testing mul8$$

memory load atari "${BINARY_PATH}"
symbols load "${SYMBOLS_PATH}"

run init until CP = $_main

// Test 1: multiply 1 by 8 = 8 (0x08)
run $_main while CP != $t1
registers set cycle_count = 0
run $t1 while CP != $t1_end AND cycle_count < 50
assert A = 0x08  $$t1: low byte should be 0x08$$
assert X = 0x00  $$t1: high byte should be 0x00$$

// Test 2: multiply 32 by 8 = 256 (0x0100)
run while CP != $t2
registers set cycle_count = 0
run while CP != $t2_end AND cycle_count < 50
assert A = 0x00  $$t2: low byte should be 0x00$$
assert X = 0x01  $$t2: high byte should be 0x01$$

// Test 3: multiply 255 by 8 = 2040 (0x07F8)
run while CP != $t3
registers set cycle_count = 0
run while CP != $t3_end AND cycle_count < 50
assert A = 0xF8  $$t3: low byte should be 0xF8$$
assert X = 0x07  $$t3: high byte should be 0x07$$

// Test 4: multiply 0 by 8 = 0 (0x0000)
run while CP != $t4
registers set cycle_count = 0
run while CP != $t4_end AND cycle_count < 50
assert A = 0x00  $$t4: low byte should be 0x00$$
assert X = 0x00  $$t4: high byte should be 0x00$$ 