FEATURES {
    STARTADDRESS: default = $3000;
}
SYMBOLS {
    __SYSTEM_CHECK__:    type = export, value = 0;
    __STACKSIZE__:       type = weak,   value = $0100;
    __STARTADDRESS__:    type = export, value = %S;
    __RESERVED_MEMORY__: type = weak,   value = $0000;
    __SYSCHKHDR__:       type = export, value = 0; # Disable system check header
    __SYSCHKTRL__:       type = export, value = 0; # Disable system check trailer
}
MEMORY {
    ZP:         file = "", define = yes, start = $0082, size = $007E;
    # SYSCHKCHNK: file = %O,               start = $2E00, size = $0300;
    MAIN:       file = %O, define = yes, start = %S,    size = $BC20 - __STACKSIZE__ - __RESERVED_MEMORY__ - %S;
    # SIOV Patch for testing
    SIOVP:      file = %O, define = yes, start = $E459, size = $0200;
}
FILES {
    %O: format = atari;
}
FORMATS {
    atari: runad = start;
           # initad = SYSCHKCHNK: __SYSTEM_CHECK__;
}
SEGMENTS {
    ZEROPAGE: load = ZP,         type = zp;
    EXTZP:    load = ZP,         type = zp,                optional = yes;
    #SYSCHK:   load = SYSCHKCHNK, type = rw,  define = yes, optional = yes;
    STARTUP:  load = MAIN,       type = ro,  define = yes;
    LOWBSS:   load = MAIN,       type = rw,                optional = yes;  # not zero initialized
    LOWCODE:  load = MAIN,       type = ro,  define = yes, optional = yes;
    ONCE:     load = MAIN,       type = ro,                optional = yes;
    CODE:     load = MAIN,       type = rw,  define = yes;
    RODATA:   load = MAIN,       type = ro                 optional = yes;
    DATA:     load = MAIN,       type = rw                 optional = yes;
    INIT:     load = MAIN,       type = rw,                optional = yes;
    BSS:      load = MAIN,       type = bss, define = yes, optional = yes;
    SIOVP:    load = SIOVP,      type = rw,  define = yes, optional = yes;
}
FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
}